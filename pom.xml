<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.toyota.tme.payutils</groupId>
  <artifactId>payutils</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>payutils Maven Webapp</name>
  <url>http://maven.apache.org</url>

  <!--Set as appropriate to your project-->
  <properties>
    <build.buildNumber>pc-build-001</build.buildNumber>
    <build.time>pc-build-now</build.time>

    <activemq.version>5.6.0</activemq.version>
    <camel.version>2.10.4</camel.version>
    <cxf.cors.version>2.7.5</cxf.cors.version>
    <jms.version>1.1</jms.version>
    <jpa.version>2.0-cr-1</jpa.version>
    <slf4j.version>1.7.5</slf4j.version>
    <log4j.version>1.2.17</log4j.version>
    <spring.version>3.0.7.RELEASE</spring.version>
    <jsr250.version>1.0</jsr250.version>
    <jsr303.version>1.0.0.GA</jsr303.version>
    <bonecp.version>0.7.1.RELEASE</bonecp.version>
    <ebean.version>2.8.1</ebean.version>
    <oracle.version>11.2.0.1.0</oracle.version>
    <commons.io.version>2.4</commons.io.version>
    <jackson.version>2.0.2</jackson.version>
    <ws-utils.version>1.59</ws-utils.version>
    <joda-time.version>2.2</joda-time.version>
    <rest-assured.version>1.7.2</rest-assured.version>
    <jetty.version>7.6.10.v20130312</jetty.version>
    <h2.version>1.3.172</h2.version>
    <junit.version>3.8.1</junit.version>
    <mockito.version>1.9.5</mockito.version>
    <rest-client-driver.version>1.1.31</rest-client-driver.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <!-- Internal-->
    <dependency>
      <groupId>com.toyota.tme</groupId>
      <artifactId>ws-utils</artifactId>
      <version>${ws-utils.version}</version>
    </dependency>


    <!-- Content processing -->
    <dependency>
      <groupId>com.fasterxml.jackson.jaxrs</groupId>
      <artifactId>jackson-jaxrs-json-provider</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!--CAMEL FRAMEWORK-->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-camel</artifactId>
      <version>${activemq.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-util</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jsp-api-2.1</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jsp-2.1</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-cxf</artifactId>
      <version>${camel.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-rt-frontend-jaxws</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-http</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-servlet</artifactId>
      <version>${camel.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-security-cors</artifactId>
      <version>${cxf.cors.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxrs</artifactId>
      <version>${cxf.cors.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${cxf.cors.version}</version>
    </dependency>

    <!--SPRING FRAMEWORK-->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!--DATABASE CONNECTION POOL MANAGER-->
    <dependency>
      <groupId>com.jolbox</groupId>
      <artifactId>bonecp</artifactId>
      <version>${bonecp.version}</version>
    </dependency>

    <!--PERSISTENCE-->
    <dependency>
      <groupId>org.hibernate.java-persistence</groupId>
      <artifactId>jpa-api</artifactId>
      <version>${jpa.version}</version>
    </dependency>
    <dependency>
      <groupId>org.avaje</groupId>
      <artifactId>ebean</artifactId>
      <version>${ebean.version}</version>
    </dependency>
    <dependency>
      <groupId>org.avaje</groupId>
      <artifactId>ebean-spring</artifactId>
      <version>${ebean.version}</version>
    </dependency>

    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>${oracle.version}</version>
    </dependency>

    <!-- Dates -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
    </dependency>

    <!-- Standard annotations -->
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>jsr250-api</artifactId>
      <version>${jsr250.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.validation</groupId>
      <artifactId>validation-api</artifactId>
      <version>${jsr303.version}</version>
    </dependency>

    <!--LOGGING-->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <!--TESTING-->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test</artifactId>
      <version>${camel.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>${rest-assured.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.rest-driver</groupId>
      <artifactId>rest-client-driver</artifactId>
      <version>${rest-client-driver.version}</version>
      <scope>test</scope>
    </dependency>


    <!--BrainTree Maven dependency Start-->
    <dependency>
      <groupId>com.braintreepayments.gateway</groupId>
      <artifactId>braintree-java</artifactId>
      <version>2.49.0</version>
    </dependency>
    <!--BrainTree Maven dependency End-->

    <!--Apche cxf code for enabling CORS-->
<!--    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-rs-security-cors</artifactId>
      <version>2.6.1</version>
    </dependency>-->

  </dependencies>


  <profiles>
    <!--Would be nice to push this up to super POM
        but there are problems with merging resources (see MNG-2751 & MNG-2933)-->
    <profile>
      <id>devpc-runLocalJetty</id>
      <activation>
      </activation>
      <properties>
        <deployable.artifactId>${project.artifactId}</deployable.artifactId>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>1.4.1</version>
            <executions>
              <execution>
                <id>enforce-configuration-setup</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireFilesExist>
                      <files>
                     <file>./src</file>
                        <!--&lt;!&ndash; <file>../configuration/system-admin</file>&ndash;&gt;
                        <file>../configuration/properties/pc</file>&ndash;&gt;-->
                  </files>
                    </requireFilesExist>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>8.1.3.v20120416</version>
            <configuration>
              <!--Use the data from the configuration folders ... filtered in the resources section below-->
             <!-- <testClassesDirectory>${project.basedir}/target/tmp/resources</testClassesDirectory>
              <useTestClasspath>true</useTestClasspath>
              <webAppXml>${project.build.directory}/tmp/jetty-web.xml</webAppXml>-->
              <connectors>
                <!-- work around file locking on windows -->
                <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                  <port>8082</port><!-- this connector defaults to 1300 for some reason -->
                </connector>
              </connectors>
            </configuration>
          </plugin>
        </plugins>
        <!--<resources>
          &lt;!&ndash;Use the data from the configuration folders... &ndash;&gt;
          &lt;!&ndash; <resource>
               <directory>../configuration/system-admin</directory>
               <filtering>true</filtering>
               <targetPath>${project.build.directory}/tmp/resources</targetPath>
           </resource>&ndash;&gt;
          <resource>
            <directory>../configuration/properties/pc</directory>
            <filtering>true</filtering>
            <targetPath>${project.build.directory}/tmp/resources</targetPath>
          </resource>
          <resource>
            <directory>../configuration/contexts</directory>
            <filtering>true</filtering>
            <targetPath>${project.build.directory}/tmp</targetPath>
          </resource>
          <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
          </resource>
        </resources>-->
      </build>
    </profile>
  </profiles>


  <build>
    <defaultGoal>install</defaultGoal>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/test-resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

  </build>
</project>
